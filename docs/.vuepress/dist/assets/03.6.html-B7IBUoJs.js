import{_ as a,c as d,a as p,b as e,f as t,d as r,e as n,r as g,o as c}from"./app-DtITwm2S.js";const i={};function s(f,o){const l=g("RouteLink");return c(),d("div",null,[o[8]||(o[8]=p('<h1 id="_3-6-生成代码文档" tabindex="-1"><a class="header-anchor" href="#_3-6-生成代码文档"><span>3.6 生成代码文档</span></a></h1><p>godoc 工具会从 Go 程序和包文件中提取顶级声明的首行注释以及每个对象的相关注释，并生成相关文档。</p><p>它也可以作为一个提供在线文档浏览的 web 服务器，<a href="http://golang.org" target="_blank" rel="noopener noreferrer">http://golang.org</a> 就是通过这种形式实现的。</p><p><strong>一般用法</strong></p><ul><li><code>go doc package</code> 获取包的文档注释，例如：<code>go doc fmt</code> 会显示使用 godoc 生成的 <code>fmt</code> 包的文档注释。</li><li><code>go doc package/subpackage</code> 获取子包的文档注释，例如：<code>go doc container/list</code>。</li><li><code>go doc package function</code> 获取某个函数在某个包中的文档注释，例如：<code>go doc fmt Printf</code> 会显示有关 <code>fmt.Printf()</code> 的使用说明。</li></ul><p>这个工具只能获取在 Go 安装目录下 <code>../go/src</code> 中的注释内容。此外，它还可以作为一个本地文档浏览 web 服务器。在命令行输入 <code>godoc -http=:6060</code>，然后使用浏览器打开 <a href="http://localhost:6060" target="_blank" rel="noopener noreferrer">http://localhost:6060</a> 后，你就可以看到本地文档浏览服务器提供的页面。</p>',6)),e("p",null,[o[1]||(o[1]=t("godoc 也可以用于生成非标准库的 Go 源码文件的文档注释（")),r(l,{to:"/chapter-1/09.6.html"},{default:n(()=>o[0]||(o[0]=[t("第 9.6 章")])),_:1}),o[2]||(o[2]=t("）。"))]),o[9]||(o[9]=e("p",null,[t("如果想要获取更多有关 "),e("code",null,"godoc"),t(" 的信息，请访问该页面："),e("a",{href:"http://golang.org/cmd/godoc/",target:"_blank",rel:"noopener noreferrer"},"http://golang.org/cmd/godoc/"),t("（在线版的第三方包 godoc 可以使用 "),e("a",{href:"https://gowalker.org",target:"_blank",rel:"noopener noreferrer"},"Go Walker"),t("）。")],-1)),o[10]||(o[10]=e("h2",{id:"链接",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#链接"},[e("span",null,"链接")])],-1)),e("ul",null,[e("li",null,[r(l,{to:"/chapter-1/directory.html"},{default:n(()=>o[3]||(o[3]=[t("目录")])),_:1})]),e("li",null,[o[5]||(o[5]=t("上一节：")),r(l,{to:"/chapter-1/03.5.html"},{default:n(()=>o[4]||(o[4]=[t("格式化代码")])),_:1})]),e("li",null,[o[7]||(o[7]=t("下一节：")),r(l,{to:"/chapter-1/03.7.html"},{default:n(()=>o[6]||(o[6]=[t("其它工具")])),_:1})])])])}const h=a(i,[["render",s],["__file","03.6.html.vue"]]),m=JSON.parse('{"path":"/chapter-1/03.6.html","title":"3.6 生成代码文档","lang":"zh-cn","frontmatter":{},"headers":[{"level":1,"title":"3.6 生成代码文档","slug":"_3-6-生成代码文档","link":"#_3-6-生成代码文档","children":[{"level":2,"title":"链接","slug":"链接","link":"#链接","children":[]}]}],"git":{},"filePathRelative":"chapter-1/03.6.md"}');export{h as comp,m as data};

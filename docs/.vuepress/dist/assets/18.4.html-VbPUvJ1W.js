import{_ as p,c as i,a as o,b as a,d as t,e as l,f as s,r as c,o as r}from"./app-DtITwm2S.js";const u={};function d(k,n){const e=c("RouteLink");return r(),i("div",null,[n[5]||(n[5]=o(`<h1 id="_18-4-结构体" tabindex="-1"><a class="header-anchor" href="#_18-4-结构体"><span>18.4 结构体</span></a></h1><ul><li>创建：</li></ul><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">type</span> struct1 <span class="token keyword">struct</span> <span class="token punctuation">{</span></span>
<span class="line">    field1 type1</span>
<span class="line">    field2 type2</span>
<span class="line">    …</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line">ms <span class="token operator">:=</span> <span class="token function">new</span><span class="token punctuation">(</span>struct1<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>初始化：</li></ul><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">ms <span class="token operator">:=</span> <span class="token operator">&amp;</span>struct1<span class="token punctuation">{</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">15.5</span><span class="token punctuation">,</span> <span class="token string">&quot;Chris&quot;</span><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>当结构体的命名以大写字母开头时，该结构体在包外可见。 通常情况下，为每个结构体定义一个构建函数，并推荐使用构建函数初始化结构体（参考<a href="examples/chapter_10/person.go">例 10.2</a>）：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">ms <span class="token operator">:=</span> Newstruct1<span class="token punctuation">{</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">15.5</span><span class="token punctuation">,</span> <span class="token string">&quot;Chris&quot;</span><span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">Newstruct1</span><span class="token punctuation">(</span>n <span class="token builtin">int</span><span class="token punctuation">,</span> f <span class="token builtin">float32</span><span class="token punctuation">,</span> name <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">*</span>struct1 <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token operator">&amp;</span>struct1<span class="token punctuation">{</span>n<span class="token punctuation">,</span> f<span class="token punctuation">,</span> name<span class="token punctuation">}</span> </span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="链接" tabindex="-1"><a class="header-anchor" href="#链接"><span>链接</span></a></h2>`,8)),a("ul",null,[a("li",null,[t(e,{to:"/chapter-4/directory.html"},{default:l(()=>n[0]||(n[0]=[s("目录")])),_:1})]),a("li",null,[n[2]||(n[2]=s("上一节：")),t(e,{to:"/chapter-4/18.3.html"},{default:l(()=>n[1]||(n[1]=[s("映射")])),_:1})]),a("li",null,[n[4]||(n[4]=s("下一节：")),t(e,{to:"/chapter-4/18.5.html"},{default:l(()=>n[3]||(n[3]=[s("接口")])),_:1})])])])}const v=p(u,[["render",d],["__file","18.4.html.vue"]]),h=JSON.parse('{"path":"/chapter-4/18.4.html","title":"18.4 结构体","lang":"zh-cn","frontmatter":{},"headers":[{"level":1,"title":"18.4 结构体","slug":"_18-4-结构体","link":"#_18-4-结构体","children":[{"level":2,"title":"链接","slug":"链接","link":"#链接","children":[]}]}],"git":{},"filePathRelative":"chapter-4/18.4.md"}');export{v as comp,h as data};

import{_ as t,c as o,a as i,b as a,d as p,e as l,f as s,r as c,o as r}from"./app-DtITwm2S.js";const d={};function u(k,n){const e=c("RouteLink");return r(),o("div",null,[n[5]||(n[5]=i(`<h1 id="_18-2-数组和切片" tabindex="-1"><a class="header-anchor" href="#_18-2-数组和切片"><span>18.2 数组和切片</span></a></h1><ul><li><p>创建：</p><p><code>arr1 := new([len]type)</code></p><p><code>slice1 := make([]type, len)</code></p></li><li><p>初始化：</p><p><code>arr1 := [...]type{i1, i2, i3, i4, i5}</code></p><p><code>arrKeyValue := [len]type{i1: val1, i2: val2}</code></p><p><code>var slice1 []type = arr1[start:end]</code></p></li></ul><p>（1）如何截断数组或者切片的最后一个元素：</p><p>​ <code>line = line[:len(line)-1]</code></p><p>（2）如何使用 <code>for</code> 或者 <code>for-range</code> 遍历一个数组（或者切片）：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">for</span> i<span class="token operator">:=</span><span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token function">len</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span></span>
<span class="line">… <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">for</span> ix<span class="token punctuation">,</span> value <span class="token operator">:=</span> <span class="token keyword">range</span> arr <span class="token punctuation">{</span></span>
<span class="line">…</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（3）如何在一个二维数组或者切片 <code>arr2Dim</code> 中查找一个指定值 <code>V</code>：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">found <span class="token operator">:=</span> <span class="token boolean">false</span></span>
<span class="line">Found<span class="token punctuation">:</span> <span class="token keyword">for</span> row <span class="token operator">:=</span> <span class="token keyword">range</span> arr2Dim <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">for</span> column <span class="token operator">:=</span> <span class="token keyword">range</span> arr2Dim<span class="token punctuation">[</span>row<span class="token punctuation">]</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">if</span> arr2Dim<span class="token punctuation">[</span>row<span class="token punctuation">]</span><span class="token punctuation">[</span>column<span class="token punctuation">]</span> <span class="token operator">==</span> V<span class="token punctuation">{</span></span>
<span class="line">            found <span class="token operator">=</span> <span class="token boolean">true</span></span>
<span class="line">            <span class="token keyword">break</span> Found</span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="链接" tabindex="-1"><a class="header-anchor" href="#链接"><span>链接</span></a></h2>`,9)),a("ul",null,[a("li",null,[p(e,{to:"/chapter-4/directory.html"},{default:l(()=>n[0]||(n[0]=[s("目录")])),_:1})]),a("li",null,[n[2]||(n[2]=s("上一节：")),p(e,{to:"/chapter-4/18.1.html"},{default:l(()=>n[1]||(n[1]=[s("字符串")])),_:1})]),a("li",null,[n[4]||(n[4]=s("下一节：")),p(e,{to:"/chapter-4/18.3.html"},{default:l(()=>n[3]||(n[3]=[s("映射")])),_:1})])])])}const v=t(d,[["render",u],["__file","18.2.html.vue"]]),b=JSON.parse('{"path":"/chapter-4/18.2.html","title":"18.2 数组和切片","lang":"zh-cn","frontmatter":{},"headers":[{"level":1,"title":"18.2 数组和切片","slug":"_18-2-数组和切片","link":"#_18-2-数组和切片","children":[{"level":2,"title":"链接","slug":"链接","link":"#链接","children":[]}]}],"git":{},"filePathRelative":"chapter-4/18.2.md"}');export{v as comp,b as data};

import{_ as l,c as i,b as s,f as a,d as e,e as p,a as o,r as c,o as u}from"./app-DtITwm2S.js";const r={};function d(k,n){const t=c("RouteLink");return u(),i("div",null,[n[14]||(n[14]=s("h1",{id:"_10-4-带标签的结构体",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_10-4-带标签的结构体"},[s("span",null,"10.4 带标签的结构体")])],-1)),s("p",null,[n[1]||(n[1]=a("结构体中的字段除了有名字和类型外，还可以有一个可选的标签 (tag)：它是一个附属于字段的字符串，可以是文档或其他的重要标记。标签的内容不可以在一般的编程中使用，只有包 ")),n[2]||(n[2]=s("code",null,"reflect",-1)),n[3]||(n[3]=a(" 能获取它。我们将在下一章（")),e(t,{to:"/chapter-2/11.10.html"},{default:p(()=>n[0]||(n[0]=[a("第 11.10 节")])),_:1}),n[4]||(n[4]=a("中深入的探讨 ")),n[5]||(n[5]=s("code",null,"reflect",-1)),n[6]||(n[6]=a(" 包，它可以在运行时自省类型、属性和方法，比如：在一个变量上调用 ")),n[7]||(n[7]=s("code",null,"reflect.TypeOf()",-1)),n[8]||(n[8]=a(" 可以获取变量的正确类型，如果变量是一个结构体类型，就可以通过 Field 来索引结构体的字段，然后就可以使用 Tag 属性。"))]),n[15]||(n[15]=o(`<p>示例 10.7 <a href="examples/chapter_10/struct_tag.go">struct_tag.go</a>：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">package</span> main</span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">(</span></span>
<span class="line">	<span class="token string">&quot;fmt&quot;</span></span>
<span class="line">	<span class="token string">&quot;reflect&quot;</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">type</span> TagType <span class="token keyword">struct</span> <span class="token punctuation">{</span> <span class="token comment">// tags</span></span>
<span class="line">	field1 <span class="token builtin">bool</span>   <span class="token string">&quot;An important answer&quot;</span></span>
<span class="line">	field2 <span class="token builtin">string</span> <span class="token string">&quot;The name of the thing&quot;</span></span>
<span class="line">	field3 <span class="token builtin">int</span>    <span class="token string">&quot;How much there are&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">	tt <span class="token operator">:=</span> TagType<span class="token punctuation">{</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token string">&quot;Barak Obama&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">}</span></span>
<span class="line">	<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token function">refTag</span><span class="token punctuation">(</span>tt<span class="token punctuation">,</span> i<span class="token punctuation">)</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">refTag</span><span class="token punctuation">(</span>tt TagType<span class="token punctuation">,</span> ix <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">	ttType <span class="token operator">:=</span> reflect<span class="token punctuation">.</span><span class="token function">TypeOf</span><span class="token punctuation">(</span>tt<span class="token punctuation">)</span></span>
<span class="line">	ixField <span class="token operator">:=</span> ttType<span class="token punctuation">.</span><span class="token function">Field</span><span class="token punctuation">(</span>ix<span class="token punctuation">)</span></span>
<span class="line">	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%v\\n&quot;</span><span class="token punctuation">,</span> ixField<span class="token punctuation">.</span>Tag<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出：</p><pre><code>An important answer
The name of the thing
How much there are
</code></pre><h2 id="链接" tabindex="-1"><a class="header-anchor" href="#链接"><span>链接</span></a></h2>`,5)),s("ul",null,[s("li",null,[e(t,{to:"/chapter-2/directory.html"},{default:p(()=>n[9]||(n[9]=[a("目录")])),_:1})]),s("li",null,[n[11]||(n[11]=a("上一节：")),e(t,{to:"/chapter-2/10.3.html"},{default:p(()=>n[10]||(n[10]=[a("使用自定义包中的结构体")])),_:1})]),s("li",null,[n[13]||(n[13]=a("下一节：")),e(t,{to:"/chapter-2/10.5.html"},{default:p(()=>n[12]||(n[12]=[a("匿名字段和内嵌结构体")])),_:1})])])])}const v=l(r,[["render",d],["__file","10.4.html.vue"]]),f=JSON.parse('{"path":"/chapter-2/10.4.html","title":"10.4 带标签的结构体","lang":"zh-cn","frontmatter":{},"headers":[{"level":1,"title":"10.4 带标签的结构体","slug":"_10-4-带标签的结构体","link":"#_10-4-带标签的结构体","children":[{"level":2,"title":"链接","slug":"链接","link":"#链接","children":[]}]}],"git":{},"filePathRelative":"chapter-2/10.4.md"}');export{v as comp,f as data};

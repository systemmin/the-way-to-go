import{_ as r,c as s,a as i,b as l,d as a,e as n,f as t,r as d,o as p}from"./app-DtITwm2S.js";const h={};function m(c,e){const o=d("RouteLink");return p(),s("div",null,[e[5]||(e[5]=i('<h1 id="_7-0-数组与切片" tabindex="-1"><a class="header-anchor" href="#_7-0-数组与切片"><span>7.0 数组与切片</span></a></h1><p>这章我们开始剖析 <strong>集合</strong>，它是可以包含大量条目 (item) 的数据结构，例如数组、切片和 <code>map</code>。从这看到 Go 明显受到 Python 的影响。</p><p>以 <code>[]</code> 符号标识的数组类型几乎在所有的编程语言中都是一个基本主力。Go 语言中的数组也是类似的，只是有一些特点。Go 没有 C 那么灵活，但是拥有切片 (slice) 类型。这是一种建立在 Go 语言数组类型之上的抽象，要想理解切片我们必须先理解数组。数组有特定的用处，但是却有一些呆板，所以在 Go 语言的代码里并不是特别常见。相对的，切片确实随处可见的。它们构建在数组之上并且提供更强大的能力和便捷。</p><h2 id="链接" tabindex="-1"><a class="header-anchor" href="#链接"><span>链接</span></a></h2>',4)),l("ul",null,[l("li",null,[a(o,{to:"/chapter-2/directory.html"},{default:n(()=>e[0]||(e[0]=[t("目录")])),_:1})]),l("li",null,[e[2]||(e[2]=t("上一节：")),a(o,{to:"/chapter-2/06.12.html"},{default:n(()=>e[1]||(e[1]=[t("通过内存缓存来提升性能")])),_:1})]),l("li",null,[e[4]||(e[4]=t("下一节：")),a(o,{to:"/chapter-2/07.1.html"},{default:n(()=>e[3]||(e[3]=[t("声明和初始化")])),_:1})])])])}const f=r(h,[["render",m],["__file","07.0.html.vue"]]),_=JSON.parse('{"path":"/chapter-2/07.0.html","title":"7.0 数组与切片","lang":"zh-cn","frontmatter":{},"headers":[{"level":1,"title":"7.0 数组与切片","slug":"_7-0-数组与切片","link":"#_7-0-数组与切片","children":[{"level":2,"title":"链接","slug":"链接","link":"#链接","children":[]}]}],"git":{},"filePathRelative":"chapter-2/07.0.md"}');export{f as comp,_ as data};

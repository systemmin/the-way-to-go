import{_ as l,c as o,b as s,f as a,d as p,e,a as i,r as u,o as c}from"./app-DtITwm2S.js";const r={};function k(d,n){const t=u("RouteLink");return c(),o("div",null,[n[12]||(n[12]=s("h1",{id:"_8-5-map-的排序",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_8-5-map-的排序"},[s("span",null,"8.5 map 的排序")])],-1)),n[13]||(n[13]=s("p",null,[s("code",null,"map"),a(" 默认是无序的，不管是按照 key 还是按照 value 默认都不排序（详见第 8.3 节）。")],-1)),s("p",null,[n[1]||(n[1]=a("如果你想为 ")),n[2]||(n[2]=s("code",null,"map",-1)),n[3]||(n[3]=a(" 排序，需要将 key（或者 value）拷贝到一个切片，再对切片排序（使用 ")),n[4]||(n[4]=s("code",null,"sort",-1)),n[5]||(n[5]=a(" 包，详见")),p(t,{to:"/chapter-2/07.6.html"},{default:e(()=>n[0]||(n[0]=[a("第 7.6.6 节")])),_:1}),n[6]||(n[6]=a("），然后可以使用切片的 for-range 方法打印出所有的 key 和 value。"))]),n[14]||(n[14]=i(`<p>下面有一个示例：</p><p>示例 8.6 <a href="examples/chapter_8/sort_map.go">sort_map.go</a>：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token comment">// the telephone alphabet:</span></span>
<span class="line"><span class="token keyword">package</span> main</span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">(</span></span>
<span class="line">	<span class="token string">&quot;fmt&quot;</span></span>
<span class="line">	<span class="token string">&quot;sort&quot;</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">var</span> <span class="token punctuation">(</span></span>
<span class="line">	barVal <span class="token operator">=</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token string">&quot;alpha&quot;</span><span class="token punctuation">:</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token string">&quot;bravo&quot;</span><span class="token punctuation">:</span> <span class="token number">56</span><span class="token punctuation">,</span> <span class="token string">&quot;charlie&quot;</span><span class="token punctuation">:</span> <span class="token number">23</span><span class="token punctuation">,</span></span>
<span class="line">							<span class="token string">&quot;delta&quot;</span><span class="token punctuation">:</span> <span class="token number">87</span><span class="token punctuation">,</span> <span class="token string">&quot;echo&quot;</span><span class="token punctuation">:</span> <span class="token number">56</span><span class="token punctuation">,</span> <span class="token string">&quot;foxtrot&quot;</span><span class="token punctuation">:</span> <span class="token number">12</span><span class="token punctuation">,</span></span>
<span class="line">							<span class="token string">&quot;golf&quot;</span><span class="token punctuation">:</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token string">&quot;hotel&quot;</span><span class="token punctuation">:</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token string">&quot;indio&quot;</span><span class="token punctuation">:</span> <span class="token number">87</span><span class="token punctuation">,</span></span>
<span class="line">							<span class="token string">&quot;juliet&quot;</span><span class="token punctuation">:</span> <span class="token number">65</span><span class="token punctuation">,</span> <span class="token string">&quot;kili&quot;</span><span class="token punctuation">:</span> <span class="token number">43</span><span class="token punctuation">,</span> <span class="token string">&quot;lima&quot;</span><span class="token punctuation">:</span> <span class="token number">98</span><span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;unsorted:&quot;</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token keyword">for</span> k<span class="token punctuation">,</span> v <span class="token operator">:=</span> <span class="token keyword">range</span> barVal <span class="token punctuation">{</span></span>
<span class="line">		fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Key: %v, Value: %v / &quot;</span><span class="token punctuation">,</span> k<span class="token punctuation">,</span> v<span class="token punctuation">)</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line">	keys <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>barVal<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">	i <span class="token operator">:=</span> <span class="token number">0</span></span>
<span class="line">	<span class="token keyword">for</span> k<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> <span class="token keyword">range</span> barVal <span class="token punctuation">{</span></span>
<span class="line">		keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> k</span>
<span class="line">		i<span class="token operator">++</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line">	sort<span class="token punctuation">.</span><span class="token function">Strings</span><span class="token punctuation">(</span>keys<span class="token punctuation">)</span></span>
<span class="line">	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;sorted:&quot;</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> k <span class="token operator">:=</span> <span class="token keyword">range</span> keys <span class="token punctuation">{</span></span>
<span class="line">		fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Key: %v, Value: %v / &quot;</span><span class="token punctuation">,</span> k<span class="token punctuation">,</span> barVal<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果：</p><pre><code>unsorted:
Key: bravo, Value: 56 / Key: echo, Value: 56 / Key: indio, Value: 87 / Key: juliet, Value: 65 / Key: alpha, Value: 34 / Key: charlie, Value: 23 / Key: delta, Value: 87 / Key: foxtrot, Value: 12 / Key: golf, Value: 34 / Key: hotel, Value: 16 / Key: kili, Value: 43 / Key: lima, Value: 98 /
sorted:
Key: alpha, Value: 34 / Key: bravo, Value: 56 / Key: charlie, Value: 23 / Key: delta, Value: 87 / Key: echo, Value: 56 / Key: foxtrot, Value: 12 / Key: golf, Value: 34 / Key: hotel, Value: 16 / Key: indio, Value: 87 / Key: juliet, Value: 65 / Key: kili, Value: 43 / Key: lima, Value: 98 /
</code></pre><p>但是如果你想要一个排序的列表，那么最好使用结构体切片，这样会更有效：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">type</span> name <span class="token keyword">struct</span> <span class="token punctuation">{</span></span>
<span class="line">	key <span class="token builtin">string</span></span>
<span class="line">	value <span class="token builtin">int</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="链接" tabindex="-1"><a class="header-anchor" href="#链接"><span>链接</span></a></h2>`,8)),s("ul",null,[s("li",null,[p(t,{to:"/chapter-2/directory.html"},{default:e(()=>n[7]||(n[7]=[a("目录")])),_:1})]),s("li",null,[n[9]||(n[9]=a("上一节：")),p(t,{to:"/chapter-2/08.4.html"},{default:e(()=>n[8]||(n[8]=[a("map 类型的切片")])),_:1})]),s("li",null,[n[11]||(n[11]=a("下一节：")),p(t,{to:"/chapter-2/08.6.html"},{default:e(()=>n[10]||(n[10]=[a("将 map 的键值对调")])),_:1})])])])}const v=l(r,[["render",k],["__file","08.5.html.vue"]]),b=JSON.parse('{"path":"/chapter-2/08.5.html","title":"8.5 map 的排序","lang":"zh-cn","frontmatter":{},"headers":[{"level":1,"title":"8.5 map 的排序","slug":"_8-5-map-的排序","link":"#_8-5-map-的排序","children":[{"level":2,"title":"链接","slug":"链接","link":"#链接","children":[]}]}],"git":{},"filePathRelative":"chapter-2/08.5.md"}');export{v as comp,b as data};

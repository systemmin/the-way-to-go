import{_ as a,c as e,a as s,o as t}from"./app-DtITwm2S.js";const p={};function l(i,n){return t(),e("div",null,n[0]||(n[0]=[s(`<h1 id="快速开始" tabindex="-1"><a class="header-anchor" href="#快速开始"><span><a href="https://platform.openai.com/docs/quickstart" target="_blank" rel="noopener noreferrer">快速开始</a></span></a></h1><p>OpenAI 训练了非常擅长理解和生成文本的尖端语言模型。我们的 API 提供对这些模型的访问，可用于解决几乎任何涉及处理语言的任务。</p><p>在本快速入门教程中，您将构建一个简单的示例应用程序。在此过程中，您将学习使用 API 完成任何任务的关键概念和技术，包括：</p><ul><li>内容生成</li><li>总结</li><li>分类、分类和情感分析</li><li>数据提取</li><li>翻译</li><li>还有很多！</li></ul><h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍"><span>介绍</span></a></h2><p><a href="../api/%E8%A1%A5%E5%85%A8">补全</a>端点是我们 API 的核心，它提供了一个极其灵活和强大的简单接口。您输入一些文本作为<strong>提示</strong>，API 将返回一个文本<strong>补全</strong>，尝试匹配您提供的任何指令或上下文。</p><p><strong>示例：</strong></p><p><code>提示信息</code> 为冰淇淋店写一个标语。 <br><br><svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 20 20" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M16.707 10.293a1 1 0 010 1.414l-6 6a1 1 0 01-1.414 0l-6-6a1 1 0 111.414-1.414L9 14.586V3a1 1 0 012 0v11.586l4.293-4.293a1 1 0 011.414 0z" clip-rule="evenodd"></path></svg><br><br><code>补全结果</code> 每一勺我们都会微笑！</p><p>您可以将其视为非常高级的自动补全——模型处理您的文本提示并尝试预测接下来最有可能出现的内容。</p><h2 id="从指令开始" tabindex="-1"><a class="header-anchor" href="#从指令开始"><span>从指令开始</span></a></h2><p>假设您想创建一个宠物名字生成器。从头开始想出名字很难！</p><p>首先，您需要一个明确说明您想要什么的提示。让我们从一个指令开始。提交此提示以生成您的第一个补全。</p><p style="padding:1rem 1.5rem;color:#41b883;border:1px solid #ddd;border-radius:4px;">给一匹马起一个名字</p><p>不错！现在，试着让你的指示更具体</p><p style="padding:1rem 1.5rem;color:#41b883;border:1px solid #ddd;border-radius:4px;">给一匹黑马取一个名字</p><p>如您所见，在我们的提示中添加一个简单的形容词会改变生成的补全。设计提示本质上就是您“编程”模型的方式。</p><h2 id="添加一些例子" tabindex="-1"><a class="header-anchor" href="#添加一些例子"><span>添加一些例子</span></a></h2><p>制定好的说明对于获得好的结果很重要，但有时它们还不够。让我们试着让你的指令更复杂。</p><p style="padding:1rem 1.5rem;color:#41b883;border:1px solid #ddd;border-radius:4px;">给一匹超级英雄马取三个名字。</p><p>这个补全并不是我们想要的。这些名称非常通用，而且模型似乎没有接受我们指令中的马匹部分。让我们看看能否让它提出一些更相关的建议。</p><p>在许多情况下，向模型展示和告诉模型您想要什么是很有帮助的。在您的提示中添加示例可以帮助传达模式或细微差别。尝试提交此提示，其中包含几个示例。</p><p style="padding:1rem 1.5rem;color:#41b883;border:1px solid #ddd;border-radius:4px;"> 为一种超级英雄动物取三个名字。<br> 动物：猫<br> 名字：夏普克劳船长，Fluffball探员，不可思议的猫<br> 动物：狗<br> 姓名：保护者鲁夫、神奇犬、巴克斯-洛特爵士<br> 动物：马<br> 姓名：<br></p><p>好的！添加我们期望给定输入的输出示例有助于模型提供我们正在寻找的名称类型。</p><h2 id="调整您的设置" tabindex="-1"><a class="header-anchor" href="#调整您的设置"><span>调整您的设置</span></a></h2><p>提示设计并不是您可以使用的唯一工具。您还可以通过调整设置来控制完成。最重要的设置之一称为<strong>温度参数</strong>。</p><p>您可能已经注意到，如果您在上面的示例中多次提交相同的提示，模型将始终返回相同或非常相似的完成。这是因为您的温度设置为<strong>0</strong>。</p><p><strong>尝试将 temperature 设置为1</strong>重新提交几次相同的提示。</p><p style="padding:1rem 1.5rem;color:#41b883;border:1px solid #ddd;border-radius:4px;"> 为一种超级英雄动物取三个名字。<br> 动物：猫<br> 名字：夏普克劳船长，Fluffball探员，不可思议的猫<br> 动物：狗<br> 姓名：保护者鲁夫、神奇犬、巴克斯-洛特爵士<br> 动物：马<br> 姓名：<br> 结果：奇妙的母马，英勇的骏马，壮丽的种马<br></p><p>看看发生了什么？当温度高于 0 时，每次提交相同的提示会导致不同的完成。</p><p>请记住，该模型预测哪个文本最有可能跟在它前面的文本之后。温度是一个介于 0 和 1 之间的值，基本上可以让您控制模型在进行这些预测时的置信度。降低温度意味着它将承担更少的风险，并且完成将更加准确和确定。升高温度将导致更多样化的补全。</p><details class="hint-container details"><summary>深入</summary><p><strong>了解标记和概率</strong></p><p>我们的模型通过将文本分解为更小的单元（称为标记）来处理文本。标记可以是单词、单词块或单个字符。编辑下面的文本以查看它是如何被标记化的。</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">原文：I have an orange cat named Butterscotch.</span>
<span class="line">译文：我有一只橙色的猫，名叫奶油糖果。</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>I</code> <code>have</code> <code>an</code> <code>orange</code> <code>cat</code> <code>named</code> <code>But</code> <code>ters</code> <code>cot</code> <code>ch</code> <code>.</code></p><p>我有一只橘猫，名叫 奶油糖果。像“猫”这样的常用词是单个标记，而不太常用的词通常被分解成多个标记。例如，“Butterscotch”翻译成四个标记：“But”、“ters”、“cot”和“ch”。许多标记以空格开头，例如“hello”和“bye”</p><p>给定一些文本，该模型确定下一个最有可能出现的标记。例如，文本“Horses are my favorite”最有可能跟随标记“animal”。</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">原文：Horses are my favorite</span>
<span class="line">译文：马是我的最爱</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th>名称</th><th>比例</th></tr></thead><tbody><tr><td>动物</td><td>49.65%</td></tr><tr><td>多种动物</td><td>42.58%</td></tr><tr><td>\\n（符号换行）</td><td>3.49%</td></tr><tr><td>!（符号感叹号）</td><td>0.91%</td></tr></tbody></table><p>这是 <strong>温度</strong> 发挥作用的地方。如果在温度设置为 0 的情况下提交此提示 4 次，该模型下一个总是会返回“动物”，因为它的概率最高。如果你提高温度，它会承担更多的风险，并考虑概率较低的标记。</p><table><thead><tr><th>如果温度（temperature ）为 0</th><th>如果温度（temperature ）为 1</th></tr></thead><tbody><tr><td>马是我最喜欢的<code>动物</code></td><td>马是我最喜欢的<code>动物</code></td></tr><tr><td>马是我最喜欢的<code>动物</code></td><td>马是我最喜欢的<code>动物</code></td></tr><tr><td>马是我最喜欢的<code>动物</code></td><td>马是我的最爱<code>!</code></td></tr><tr><td>马是我最喜欢的<code>动物</code></td><td>马是我最喜欢的<code>动物</code></td></tr></tbody></table><p>通常最好为所需输出明确定义的任务设置低温。较高的温度对于需要多样性或创造力的任务可能很有用，或者如果您想为最终用户或人类专家生成一些变化以供选择。</p></details><p>对于您的昵称生成器，您可能希望能够生成很多名字创意。 0.6 的适中温度应该可以正常工作。</p><h2 id="构建您的应用程序" tabindex="-1"><a class="header-anchor" href="#构建您的应用程序"><span>构建您的应用程序</span></a></h2><p>现在你已经找到了一个好的提示和设置，你已经准备好构建你的爱称生成器了！我们已经编写了一些代码来帮助您入门——按照下面的说明下载代码并运行应用程序。</p><h3 id="node-js" tabindex="-1"><a class="header-anchor" href="#node-js"><span>NODE.JS</span></a></h3><h4 id="开始" tabindex="-1"><a class="header-anchor" href="#开始"><span>开始</span></a></h4><p>如果您没有安装 Node.js，请从此处<a href="https://nodejs.org/zh-cn/" target="_blank" rel="noopener noreferrer">安装</a>。然后通过克隆此<a href="https://github.com/openai/openai-quickstart-node" target="_blank" rel="noopener noreferrer">存储库</a>来下载代码。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">git</span> clone https://github.com/openai/openai-quickstart-node.git</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果您不想使用 git，您也可以使用此 <a href="https://github.com/openai/openai-quickstart-node/archive/refs/heads/master.zip" target="_blank" rel="noopener noreferrer"> zip 文件</a> 下载代码。</p><h4 id="添加您的-api-密钥" tabindex="-1"><a class="header-anchor" href="#添加您的-api-密钥"><span>添加您的 API 密钥</span></a></h4><p>导航到项目目录并复制示例环境变量文件。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token builtin class-name">cd</span> openai-quickstart-node</span>
<span class="line"><span class="token function">cp</span> .env.example .env</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>复制您的秘密 API 密钥并将其设置为新创建的 <code>.env</code> 文件中的 <code>OPENAI_API_KEY</code>。如果您还没有创建密钥，您可以在下面创建。</p><table><thead><tr><th style="text-align:left;">密钥</th><th style="text-align:left;">已创建</th><th style="text-align:left;">最后使用</th></tr></thead><tbody><tr><td style="text-align:left;">sk-...RmfS</td><td style="text-align:left;">2023年2月7日</td><td style="text-align:left;">Never</td></tr><tr><td style="text-align:left;">sk-...AnxI</td><td style="text-align:left;">2023年2月7日</td><td style="text-align:left;">2023年2月8日</td></tr></tbody></table><p><a href="https://platform.openai.com/account/api-keys" target="_blank" rel="noopener noreferrer">创建秘钥</a></p><p><strong>重要说明：使用 Javascript 时，所有 API 调用都应仅在服务器端进行，因为在客户端浏览器代码中进行调用会暴露您的 API 密钥。有关更多详细信息，请参见<a href="https://platform.openai.com/docs/api-reference/authentication" target="_blank" rel="noopener noreferrer">此处</a>。</strong></p><h4 id="运行应用" tabindex="-1"><a class="header-anchor" href="#运行应用"><span>运行应用</span></a></h4><p>在项目目录下运行以下命令安装依赖并运行应用程序。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">npm</span> <span class="token function">install</span></span>
<span class="line"><span class="token function">npm</span> run dev</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>在浏览器中打开 http://localhost:3000，您应该会看到昵称生成器！</p><h4 id="理解代码" tabindex="-1"><a class="header-anchor" href="#理解代码"><span>理解代码</span></a></h4><p>在 <code>openai-quickstart-node/pages/api</code> 文件夹中打开 <code>generate.js</code>。在底部您会看到生成我们上面使用的提示的函数，</p><p>由于用户将输入他们宠物的动物类型，因此它会动态换出指定动物的提示部分。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">function</span> <span class="token function">generatePrompt</span><span class="token punctuation">(</span><span class="token parameter">animal</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> capitalizedAnimal <span class="token operator">=</span> animal<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> animal<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Suggest three names for an animal that is a superhero.</span>
<span class="line"></span>
<span class="line">Animal: Cat</span>
<span class="line">Names: Captain Sharpclaw, Agent Fluffball, The Incredible Feline</span>
<span class="line">Animal: Dog</span>
<span class="line">Names: Ruff the Protector, Wonder Canine, Sir Barks-a-Lot</span>
<span class="line">Animal: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>capitalizedAnimal<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"></span>
<span class="line">Names:</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 <code>generate.js</code> 的第 9 行，您将看到发送实际 API 请求的代码。如上所述，它使用温度为 0.6 的补全端点。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> completion <span class="token operator">=</span> <span class="token keyword">await</span> openai<span class="token punctuation">.</span><span class="token function">createCompletion</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">model</span><span class="token operator">:</span> <span class="token string">&quot;text-davinci-003&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">prompt</span><span class="token operator">:</span> <span class="token function">generatePrompt</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>body<span class="token punctuation">.</span>animal<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">temperature</span><span class="token operator">:</span> <span class="token number">0.6</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>就是这样！您现在应该完全了解您的（超级英雄）宠物名称生成器如何使用 OpenAI API！</p><h3 id="python-flask" tabindex="-1"><a class="header-anchor" href="#python-flask"><span>PYTHON(FLASK)</span></a></h3><p>现在您已经找到了一个好的提示和设置，您已经准备好构建您的爱称生成器了！我们编写了一些代码来帮助您入门 - 按照以下说明下载代码并运行应用程序。</p><h4 id="开始-1" tabindex="-1"><a class="header-anchor" href="#开始-1"><span>开始</span></a></h4><p>如果您没有安装 Python，<a href="https://www.python.org/downloads/" target="_blank" rel="noopener noreferrer">请从此处安装</a>。然后通过克隆<a href="https://github.com/openai/openai-quickstart-python" target="_blank" rel="noopener noreferrer">此存储库</a>下载代码。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">git</span> clone https://github.com/openai/openai-quickstart-python.git</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果您不想使用 git，您也可以使用<a href="https://github.com/openai/openai-quickstart-python/archive/refs/heads/master.zip" target="_blank" rel="noopener noreferrer">此 zip 文件</a>下载代码。</p><h4 id="添加您的-api-密钥-1" tabindex="-1"><a class="header-anchor" href="#添加您的-api-密钥-1"><span>添加您的 API 密钥</span></a></h4><p>导航到项目目录并复制示例环境变量文件。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token builtin class-name">cd</span> openai-quickstart-python</span>
<span class="line"><span class="token function">cp</span> .env.example .env</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>复制您的秘密 API 密钥并将其设置为<code>OPENAI_API_KEY</code>您新创建的<code>.env</code>文件中的。如果您还没有创建密钥，您可以在下面创建。</p><table><thead><tr><th style="text-align:left;">密钥</th><th style="text-align:left;">已创建</th><th style="text-align:left;">最后使用</th></tr></thead><tbody><tr><td style="text-align:left;">sk-...RmfS</td><td style="text-align:left;">2023年2月7日</td><td style="text-align:left;">绝不</td></tr><tr><td style="text-align:left;">sk-...AnxI</td><td style="text-align:left;">2023年2月7日</td><td style="text-align:left;">2023年2月9日</td></tr><tr><td style="text-align:left;">sk-...IpZO</td><td style="text-align:left;">2023年2月9日</td><td style="text-align:left;">绝不</td></tr></tbody></table><h4 id="运行应用-1" tabindex="-1"><a class="header-anchor" href="#运行应用-1"><span>运行应用</span></a></h4><p>在项目目录下运行以下命令安装依赖并运行应用程序。运行命令时，您可能需要键入<code>python3</code>/<code>pip3</code>而不是<code>python</code>/ ，<code>pip</code>具体取决于您的设置。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">python <span class="token parameter variable">-m</span> venv venv</span>
<span class="line"><span class="token builtin class-name">.</span> venv/bin/activate</span>
<span class="line">pip <span class="token function">install</span> <span class="token parameter variable">-r</span> requirements.txt</span>
<span class="line">flask run</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在浏览器中打开<a href="http://localhost:5000/" target="_blank" rel="noopener noreferrer">http://localhost:5000</a>，您应该会看到昵称生成器！</p><h4 id="理解代码-1" tabindex="-1"><a class="header-anchor" href="#理解代码-1"><span>理解代码</span></a></h4><p><code>app.py</code>在<code>openai-quickstart-python</code>文件夹中打开。在底部，您将看到生成我们在上面使用的提示的函数。由于用户将输入他们宠物的动物类型，因此它会动态换出指定动物的提示部分。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">def</span> <span class="token function">generate_prompt</span><span class="token punctuation">(</span>animal<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token triple-quoted-string string">&quot;&quot;&quot;Suggest three names for an animal that is a superhero.</span>
<span class="line"></span>
<span class="line">Animal: Cat</span>
<span class="line">Names: Captain Sharpclaw, Agent Fluffball, The Incredible Feline</span>
<span class="line">Animal: Dog</span>
<span class="line">Names: Ruff the Protector, Wonder Canine, Sir Barks-a-Lot</span>
<span class="line">Animal: {}</span>
<span class="line">Names:&quot;&quot;&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>animal<span class="token punctuation">.</span>capitalize<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 中的第 14 行<code>app.py</code>，您将看到发送实际 API 请求的代码。如上所述，它使用温度为 0.6的补全端点。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">response <span class="token operator">=</span> openai<span class="token punctuation">.</span>Completion<span class="token punctuation">.</span>create<span class="token punctuation">(</span></span>
<span class="line">  model<span class="token operator">=</span><span class="token string">&quot;text-davinci-003&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  prompt<span class="token operator">=</span>generate_prompt<span class="token punctuation">(</span>animal<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  temperature<span class="token operator">=</span><span class="token number">0.6</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>就是这样！您现在应该完全了解您的（超级英雄）宠物名称生成器如何使用 OpenAI API！</p><h2 id="结束" tabindex="-1"><a class="header-anchor" href="#结束"><span>结束</span></a></h2><p>这些概念和技术将大大有助于您构建自己的应用程序。也就是说，这个简单的例子只是展示了可能性的一小部分！补全端点非常灵活，几乎可以解决任何语言处理任务，包括内容生成、摘要、语义搜索、主题标记、情感分析等等。</p><p>要记住的一个限制是，对于大多数<strong>模型</strong>，单个 API 请求在提示和补全之间最多只能处理 2,048 个标记（大约 1,500 个单词）。</p><h3 id="深入" tabindex="-1"><a class="header-anchor" href="#深入"><span>深入</span></a></h3><h4 id="了解标记和概率" tabindex="-1"><a class="header-anchor" href="#了解标记和概率"><span>了解标记和概率</span></a></h4><details class="hint-container details"><summary>深入</summary><p><strong>模型和定价</strong></p><p>我们提供一系列具有不同功能和<a href="https://openai.com/api/pricing/" target="_blank" rel="noopener noreferrer">价位</a>的<a href="https://platform.openai.com/docs/models" target="_blank" rel="noopener noreferrer">模型</a>。在本教程中，我们使用了我们最强大的自然语言模型。我们建议在试验时使用此模型，因为它会产生最佳结果。一旦一切正常，您就可以查看其他模型是否可以以更低的延迟和成本产生相同的结果。<code>text-davinci-003</code></p><p>单个请求（提示和补全）中处理的标记总数不能超过模型的最大上下文长度。对于大多数模型，这是 2,048 个标记或大约 1,500 个单词。根据粗略的经验法则，对于英文文本，1 个标记大约为 4 个字符或 0.75 个单词。</p><p>定价为每 1,000 个标记即用即付，前 3 个月可使用 18 美元（人民币=大约122.2056）的免费信用额度。<a href="https://openai.com/api/pricing/" target="_blank" rel="noopener noreferrer">了解更多</a>。</p><p>对于更高级的任务，您可能会发现自己希望能够提供更多的示例或上下文，而不是单个提示中的内容。<a href="../guides/%E5%BE%AE%E8%B0%83">微调 API</a>是执行此类更高级任务的绝佳选择。<strong>微调</strong>允许您提供数百甚至数千个示例来为您的特定用例定制模型。</p></details><h2 id="下一步" tabindex="-1"><a class="header-anchor" href="#下一步"><span>下一步</span></a></h2><p>要获得灵感并了解有关为不同任务设计提示的更多信息：</p><ul><li>阅读我们的<a href="../guides/%E6%96%87%E6%9C%AC%E8%A1%A5%E5%85%A8">补全指南</a>。</li><li>浏览我们的<a href="https://platform.openai.com/examples" target="_blank" rel="noopener noreferrer">示例提示</a>库。</li><li>开始在<a href="https://platform.openai.com/playground" target="_blank" rel="noopener noreferrer">Playground</a>中进行试验。</li><li>在开始构建时，请牢记我们的<a href="./%E4%BD%BF%E7%94%A8%E6%94%BF%E7%AD%96">使用政策</a>。</li></ul>`,87)]))}const o=a(p,[["render",l],["__file","快速开始.html.vue"]]),d=JSON.parse('{"path":"/start/%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B.html","title":"快速开始","lang":"zh-cn","frontmatter":{},"headers":[{"level":1,"title":"快速开始","slug":"快速开始","link":"#快速开始","children":[{"level":2,"title":"介绍","slug":"介绍","link":"#介绍","children":[]},{"level":2,"title":"从指令开始","slug":"从指令开始","link":"#从指令开始","children":[]},{"level":2,"title":"添加一些例子","slug":"添加一些例子","link":"#添加一些例子","children":[]},{"level":2,"title":"调整您的设置","slug":"调整您的设置","link":"#调整您的设置","children":[]},{"level":2,"title":"构建您的应用程序","slug":"构建您的应用程序","link":"#构建您的应用程序","children":[{"level":3,"title":"NODE.JS","slug":"node-js","link":"#node-js","children":[]},{"level":3,"title":"PYTHON(FLASK)","slug":"python-flask","link":"#python-flask","children":[]}]},{"level":2,"title":"结束","slug":"结束","link":"#结束","children":[{"level":3,"title":"深入","slug":"深入","link":"#深入","children":[]}]},{"level":2,"title":"下一步","slug":"下一步","link":"#下一步","children":[]}]}],"git":{},"filePathRelative":"start/快速开始.md"}');export{o as comp,d as data};

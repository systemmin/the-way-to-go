import{_ as i,c as s,b as t,f as o,d as e,e as r,r as u,o as d}from"./app-DtITwm2S.js";const a={};function p(f,l){const n=u("RouteLink");return d(),s("div",null,[l[11]||(l[11]=t("h1",{id:"_3-7-其它工具",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#_3-7-其它工具"},[t("span",null,"3.7 其它工具")])],-1)),l[12]||(l[12]=t("p",null,"Go 自带的工具集主要使用脚本和 Go 语言自身编写的，目前版本的 Go 实现了以下三个工具：",-1)),t("ul",null,[l[4]||(l[4]=t("li",null,[t("code",null,"go install"),o(" 是安装 Go 包的工具，类似 Ruby 中的 rubygems。主要用于安装非标准库的包文件，将源代码编译成对象文件。")],-1)),l[5]||(l[5]=t("li",null,[t("code",null,"go fix"),o(" 用于将你的 Go 代码从旧的发行版迁移到最新的发行版，它主要负责简单的、重复的、枯燥无味的修改工作，如果像 API 等复杂的函数修改，工具则会给出文件名和代码行数的提示以便让开发人员快速定位并升级代码。Go 开发团队一般也使用这个工具升级 Go 内置工具以及 谷歌内部项目的代码。"),t("code",null,"go fix"),o(" 之所以能够正常工作是因为 Go 在标准库就提供生成抽象语法树和通过抽象语法树对代码进行还原的功能。该工具会尝试更新当前目录下的所有 Go 源文件，并在完成代码更新后在控制台输出相关的文件名称。")],-1)),t("li",null,[l[1]||(l[1]=t("code",null,"go test",-1)),l[2]||(l[2]=o(" 是一个轻量级的单元测试框架（")),e(n,{to:"/chapter-1/13.0.html"},{default:r(()=>l[0]||(l[0]=[o("第 13 章")])),_:1}),l[3]||(l[3]=o("）。"))])]),l[13]||(l[13]=t("h2",{id:"链接",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#链接"},[t("span",null,"链接")])],-1)),t("ul",null,[t("li",null,[e(n,{to:"/chapter-1/directory.html"},{default:r(()=>l[6]||(l[6]=[o("目录")])),_:1})]),t("li",null,[l[8]||(l[8]=o("上一节：")),e(n,{to:"/chapter-1/03.6.html"},{default:r(()=>l[7]||(l[7]=[o("生成代码文档")])),_:1})]),t("li",null,[l[10]||(l[10]=o("下一节：")),e(n,{to:"/chapter-1/03.8.html"},{default:r(()=>l[9]||(l[9]=[o("Go 性能说明")])),_:1})])])])}const G=i(a,[["render",p],["__file","03.7.html.vue"]]),g=JSON.parse('{"path":"/chapter-1/03.7.html","title":"3.7 其它工具","lang":"zh-cn","frontmatter":{},"headers":[{"level":1,"title":"3.7 其它工具","slug":"_3-7-其它工具","link":"#_3-7-其它工具","children":[{"level":2,"title":"链接","slug":"链接","link":"#链接","children":[]}]}],"git":{},"filePathRelative":"chapter-1/03.7.md"}');export{G as comp,g as data};

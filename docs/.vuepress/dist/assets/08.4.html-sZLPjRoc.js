import{_ as o,c as l,a as i,b as a,d as t,e,f as s,r as c,o as u}from"./app-DtITwm2S.js";const r={};function k(m,n){const p=c("RouteLink");return u(),l("div",null,[n[5]||(n[5]=i(`<h1 id="_8-4-map-类型的切片" tabindex="-1"><a class="header-anchor" href="#_8-4-map-类型的切片"><span>8.4 map 类型的切片</span></a></h1><p>假设我们想获取一个 <code>map</code> 类型的切片，我们必须使用两次 <code>make()</code> 函数，第一次分配切片，第二次分配切片中每个 <code>map</code> 元素（参见下面的例子 8.4）。</p><p>示例 8.4 <a href="examples/chapter_8/maps_forrange2.go">maps_forrange2.go</a>：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">package</span> main</span>
<span class="line"><span class="token keyword">import</span> <span class="token string">&quot;fmt&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token comment">// Version A:</span></span>
<span class="line">	items <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token keyword">for</span> i<span class="token operator">:=</span> <span class="token keyword">range</span> items <span class="token punctuation">{</span></span>
<span class="line">		items<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">		items<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">2</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line">	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Version A: Value of items: %v\\n&quot;</span><span class="token punctuation">,</span> items<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">	<span class="token comment">// Version B: NOT GOOD!</span></span>
<span class="line">	items2 <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> item <span class="token operator">:=</span> <span class="token keyword">range</span> items2 <span class="token punctuation">{</span></span>
<span class="line">		item <span class="token operator">=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// item is only a copy of the slice element.</span></span>
<span class="line">		item<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">2</span> <span class="token comment">// This &#39;item&#39; will be lost on the next iteration.</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line">	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Version B: Value of items: %v\\n&quot;</span><span class="token punctuation">,</span> items2<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果：</p><pre><code>Version A: Value of items: [map[1:2] map[1:2] map[1:2] map[1:2] map[1:2]]
Version B: Value of items: [map[] map[] map[] map[] map[]]
</code></pre><p>需要注意的是，应当像 A 版本那样通过索引使用切片的 <code>map</code> 元素。在 B 版本中获得的项只是 <code>map</code> 值的一个拷贝而已，所以真正的 <code>map</code> 元素没有得到初始化。</p><h2 id="链接" tabindex="-1"><a class="header-anchor" href="#链接"><span>链接</span></a></h2>`,8)),a("ul",null,[a("li",null,[t(p,{to:"/chapter-2/directory.html"},{default:e(()=>n[0]||(n[0]=[s("目录")])),_:1})]),a("li",null,[n[2]||(n[2]=s("上一节：")),t(p,{to:"/chapter-2/08.3.html"},{default:e(()=>n[1]||(n[1]=[s("for-range 的配套用法")])),_:1})]),a("li",null,[n[4]||(n[4]=s("下一节：")),t(p,{to:"/chapter-2/08.5.html"},{default:e(()=>n[3]||(n[3]=[s("map 的排序")])),_:1})])])])}const v=o(r,[["render",k],["__file","08.4.html.vue"]]),b=JSON.parse('{"path":"/chapter-2/08.4.html","title":"8.4 map 类型的切片","lang":"zh-cn","frontmatter":{},"headers":[{"level":1,"title":"8.4 map 类型的切片","slug":"_8-4-map-类型的切片","link":"#_8-4-map-类型的切片","children":[{"level":2,"title":"链接","slug":"链接","link":"#链接","children":[]}]}],"git":{},"filePathRelative":"chapter-2/08.4.md"}');export{v as comp,b as data};

import{_ as r,c as i,a as s,b as o,d as a,e as n,f as t,r as p,o as d}from"./app-DtITwm2S.js";const h={};function u(m,e){const l=p("RouteLink");return d(),i("div",null,[e[5]||(e[5]=s('<h1 id="_2-8-go-解释器" tabindex="-1"><a class="header-anchor" href="#_2-8-go-解释器"><span>2.8 Go 解释器</span></a></h1><p>因为 Go 具有像动态语言那样快速编译的能力，自然而然地就有人会问 Go 语言能否在 REPL (read-eval-print loop) 编程环境下实现。Sebastien Binet 已经使用这种环境实现了一个 Go 解释器，你可以在这个页面找到：<a href="https://github.com/sbinet/igo" target="_blank" rel="noopener noreferrer">https://github.com/sbinet/igo</a>。</p><h2 id="链接" tabindex="-1"><a class="header-anchor" href="#链接"><span>链接</span></a></h2>',3)),o("ul",null,[o("li",null,[a(l,{to:"/chapter-1/directory.html"},{default:n(()=>e[0]||(e[0]=[t("目录")])),_:1})]),o("li",null,[e[2]||(e[2]=t("上一节：")),a(l,{to:"/chapter-1/02.7.html"},{default:n(()=>e[1]||(e[1]=[t("Go 运行时 (runtime)")])),_:1})]),o("li",null,[e[4]||(e[4]=t("下一章：")),a(l,{to:"/chapter-1/03.0.html"},{default:n(()=>e[3]||(e[3]=[t("编辑器、集成开发环境与其它工具")])),_:1})])])])}const c=r(h,[["render",u],["__file","02.8.html.vue"]]),g=JSON.parse('{"path":"/chapter-1/02.8.html","title":"2.8 Go 解释器","lang":"zh-cn","frontmatter":{},"headers":[{"level":1,"title":"2.8 Go 解释器","slug":"_2-8-go-解释器","link":"#_2-8-go-解释器","children":[{"level":2,"title":"链接","slug":"链接","link":"#链接","children":[]}]}],"git":{},"filePathRelative":"chapter-1/02.8.md"}');export{c as comp,g as data};

import{_ as o,c as i,a,b as e,f as n,d as p,e as l,r,o as c}from"./app-DtITwm2S.js";const u={};function d(v,s){const t=r("RouteLink");return c(),i("div",null,[s[8]||(s[8]=a('<h1 id="嵌入" tabindex="-1"><a class="header-anchor" href="#嵌入"><span>嵌入</span></a></h1><p>获取给定输入的矢量表示，机器学习模型和算法可以轻松使用该表示。</p><p>相关指南：<a href="/guides/%E5%B5%8C%E5%85%A5">嵌入</a></p><h2 id="创建嵌入" tabindex="-1"><a class="header-anchor" href="#创建嵌入"><span>创建嵌入</span></a></h2><p><code>POST</code> <code>https://api.openai.com/v1/embeddings</code></p><p>创建表示输入文本的嵌入向量。</p><h3 id="请求正文" tabindex="-1"><a class="header-anchor" href="#请求正文"><span>请求正文</span></a></h3><p><strong>model</strong> <code>string</code> <code>必填</code></p>',8)),e("p",null,[s[1]||(s[1]=n("要使用的模型的 ID。您可以使用")),p(t,{to:"/api/api/%E6%A8%A1%E5%9E%8B.html#%E6%A8%A1%E5%9E%8B%E5%88%97%E8%A1%A8"},{default:l(()=>s[0]||(s[0]=[n("模型列表")])),_:1}),s[2]||(s[2]=n(" API 来查看所有可用模型，或查看我们的")),s[3]||(s[3]=e("a",{href:"/start/%E6%A8%A1%E5%9E%8B"},"模型概述",-1)),s[4]||(s[4]=n("以了解它们的描述。"))]),s[9]||(s[9]=a("<hr><p><strong>input</strong> <code>string or array</code> <code>必填</code></p><p>输入文本以获取嵌入，编码为字符串或标记数组。要在单个请求中获取多个输入的嵌入，请传递一个字符串数组或标记数组。每个输入的长度不得超过 8192 个标记。</p><hr><p><strong>user</strong> <code>string</code> <code>可选 </code></p>",5)),e("p",null,[s[6]||(s[6]=n("代表您的最终用户的唯一标识符，可以帮助 OpenAI 监控和检测滥用行为。")),p(t,{to:"/guides/%E5%AE%89%E5%85%A8%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5.html#%E6%9C%80%E7%BB%88%E7%94%A8%E6%88%B7-id"},{default:l(()=>s[5]||(s[5]=[n("了解更多")])),_:1}),s[7]||(s[7]=n("。"))]),s[10]||(s[10]=a(`<h3 id="请求示例" tabindex="-1"><a class="header-anchor" href="#请求示例"><span>请求示例</span></a></h3><p><strong>curl</strong></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">curl</span> https://api.openai.com/v1/embeddings <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-X</span> POST <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-H</span> <span class="token string">&quot;Authorization: Bearer YOUR_API_KEY&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-H</span> <span class="token string">&quot;Content-Type: application/json&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-d</span> <span class="token string">&#39;{&quot;input&quot;: &quot;The food was delicious and the waiter...&quot;,</span>
<span class="line">       &quot;model&quot;: &quot;text-embedding-ada-002&quot;}&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>参数</strong></p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;model&quot;</span><span class="token operator">:</span> <span class="token string">&quot;text-embedding-ada-002&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;input&quot;</span><span class="token operator">:</span> <span class="token string">&quot;The food was delicious and the waiter...&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>响应</strong></p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;object&quot;</span><span class="token operator">:</span> <span class="token string">&quot;list&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">      <span class="token property">&quot;object&quot;</span><span class="token operator">:</span> <span class="token string">&quot;embedding&quot;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token property">&quot;embedding&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">        <span class="token number">0.0023064255</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token number">-0.009327292</span><span class="token punctuation">,</span></span>
<span class="line">        .... (<span class="token number">1536</span> floats total for ada<span class="token number">-002</span>)</span>
<span class="line">        <span class="token number">-0.0028842222</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token property">&quot;index&quot;</span><span class="token operator">:</span> <span class="token number">0</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;model&quot;</span><span class="token operator">:</span> <span class="token string">&quot;text-embedding-ada-002&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;usage&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;prompt_tokens&quot;</span><span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;total_tokens&quot;</span><span class="token operator">:</span> <span class="token number">8</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7))])}const k=o(u,[["render",d],["__file","嵌入.html.vue"]]),b=JSON.parse('{"path":"/api/%E5%B5%8C%E5%85%A5.html","title":"嵌入","lang":"zh-cn","frontmatter":{},"headers":[{"level":1,"title":"嵌入","slug":"嵌入","link":"#嵌入","children":[{"level":2,"title":"创建嵌入","slug":"创建嵌入","link":"#创建嵌入","children":[{"level":3,"title":"请求正文","slug":"请求正文","link":"#请求正文","children":[]},{"level":3,"title":"请求示例","slug":"请求示例","link":"#请求示例","children":[]}]}]}],"git":{},"filePathRelative":"api/嵌入.md"}');export{k as comp,b as data};

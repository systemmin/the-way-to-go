import{_ as a,c as s,b as l,d as r,e as o,f as e,r as i,o as d}from"./app-DtITwm2S.js";const u={};function p(m,t){const n=i("RouteLink");return d(),s("div",null,[t[5]||(t[5]=l("h1",{id:"_16-7-使用值类型时误用指针",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#_16-7-使用值类型时误用指针"},[l("span",null,"16.7 使用值类型时误用指针")])],-1)),t[6]||(t[6]=l("p",null,"将一个值类型作为一个参数传递给函数或者作为一个方法的接收者，似乎是对内存的滥用，因为值类型一直是传递拷贝。但是另一方面，值类型的内存是在栈上分配，内存分配快速且开销不大。如果你传递一个指针，而不是一个值类型，Go 编译器大多数情况下会认为需要创建一个对象，并将对象移动到堆上，所以会导致额外的内存分配：因此当使用指针代替值类型作为参数传递时，我们没有任何收获。",-1)),t[7]||(t[7]=l("h2",{id:"链接",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#链接"},[l("span",null,"链接")])],-1)),l("ul",null,[l("li",null,[r(n,{to:"/chapter-4/directory.html"},{default:o(()=>t[0]||(t[0]=[e("目录")])),_:1})]),l("li",null,[t[2]||(t[2]=e("上一节：")),r(n,{to:"/chapter-4/16.6.html"},{default:o(()=>t[1]||(t[1]=[e("使用指针指向接口类型")])),_:1})]),l("li",null,[t[4]||(t[4]=e("下一节：")),r(n,{to:"/chapter-4/16.8.html"},{default:o(()=>t[3]||(t[3]=[e("误用协程和通道")])),_:1})])])])}const h=a(u,[["render",p],["__file","16.7.html.vue"]]),x=JSON.parse('{"path":"/chapter-4/16.7.html","title":"16.7 使用值类型时误用指针","lang":"zh-cn","frontmatter":{},"headers":[{"level":1,"title":"16.7 使用值类型时误用指针","slug":"_16-7-使用值类型时误用指针","link":"#_16-7-使用值类型时误用指针","children":[{"level":2,"title":"链接","slug":"链接","link":"#链接","children":[]}]}],"git":{},"filePathRelative":"chapter-4/16.7.md"}');export{h as comp,x as data};

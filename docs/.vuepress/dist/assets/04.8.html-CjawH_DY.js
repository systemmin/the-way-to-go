import{_ as o,c as l,a as c,b as s,f as a,d as p,e,r as i,o as u}from"./app-DtITwm2S.js";const r={};function k(d,n){const t=i("RouteLink");return u(),l("div",null,[n[16]||(n[16]=c(`<h1 id="_4-8-时间和日期" tabindex="-1"><a class="header-anchor" href="#_4-8-时间和日期"><span>4.8 时间和日期</span></a></h1><p><code>time</code> 包为我们提供了一个数据类型 <code>time.Time</code>（作为值使用）以及显示和测量时间和日期的功能函数。</p><p>当前时间可以使用 <code>time.Now()</code> 获取，或者使用 <code>t.Day()</code>、<code>t.Minute()</code> 等等来获取时间的一部分；你甚至可以自定义时间格式化字符串，例如： <code>fmt.Printf(&quot;%02d.%02d.%4d\\n&quot;, t.Day(), t.Month(), t.Year())</code> 将会输出 <code>21.07.2011</code>。</p><p><code>Duration</code> 类型表示两个连续时刻所相差的纳秒数，类型为 <code>int64</code>。<code>Location</code> 类型映射某个时区的时间，UTC 表示通用协调世界时间。</p><p>包中的一个预定义函数 <code>func (t Time) Format(layout string) string</code> 可以根据一个格式化字符串来将一个时间 <code>t</code> 转换为相应格式的字符串，你可以使用一些预定义的格式，如：<code>time.ANSIC</code> 或 <code>time.RFC822</code>。</p><p>一般的格式化设计是通过对于一个标准时间的格式化描述来展现的，这听起来很奇怪（<code>02 Jan 2006 15:04</code> 是 Go 语言的诞生时间且自定义格式化时必须以此时间为基准），但看下面这个例子你就会一目了然：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token string">&quot;02 Jan 2006 15:04&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出：</p><pre><code>21 Jul 2011 10:31
</code></pre><p>其它有关时间操作的文档请参阅 <a href="http://golang.org/pkg/time/" target="_blank" rel="noopener noreferrer">官方文档</a>（ <strong>译者注：国内用户可访问 <a href="http://docs.studygolang.com/pkg/time/" target="_blank" rel="noopener noreferrer">该页面</a></strong> ）。</p><p>示例 4.20 <a href="examples/chapter_4/time.go">time.go</a></p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">package</span> main</span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">(</span></span>
<span class="line">	<span class="token string">&quot;fmt&quot;</span></span>
<span class="line">	<span class="token string">&quot;time&quot;</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">var</span> week time<span class="token punctuation">.</span>Duration</span>
<span class="line"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">	t <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span> <span class="token comment">// e.g. Wed Dec 21 09:52:14 +0100 RST 2011</span></span>
<span class="line">	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%02d.%02d.%4d\\n&quot;</span><span class="token punctuation">,</span> t<span class="token punctuation">.</span><span class="token function">Day</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> t<span class="token punctuation">.</span><span class="token function">Month</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> t<span class="token punctuation">.</span><span class="token function">Year</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token comment">// 21.12.2011</span></span>
<span class="line">	t <span class="token operator">=</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">UTC</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span> <span class="token comment">// Wed Dec 21 08:52:14 +0000 UTC 2011</span></span>
<span class="line">	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// Wed Dec 21 09:52:14 +0100 RST 2011</span></span>
<span class="line">	<span class="token comment">// calculating times:</span></span>
<span class="line">	week <span class="token operator">=</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">24</span> <span class="token operator">*</span> <span class="token number">7</span> <span class="token operator">*</span> <span class="token number">1e9</span> <span class="token comment">// must be in nanosec</span></span>
<span class="line">	week_from_now <span class="token operator">:=</span> t<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span><span class="token function">Duration</span><span class="token punctuation">(</span>week<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>week_from_now<span class="token punctuation">)</span> <span class="token comment">// Wed Dec 28 08:52:14 +0000 UTC 2011</span></span>
<span class="line">	<span class="token comment">// formatting times:</span></span>
<span class="line">	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>RFC822<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 21 Dec 11 0852 UTC</span></span>
<span class="line">	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>ANSIC<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// Wed Dec 21 08:56:34 2011</span></span>
<span class="line">	<span class="token comment">// The time must be 2006-01-02 15:04:05</span></span>
<span class="line">	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token string">&quot;02 Jan 2006 15:04&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 21 Dec 2011 08:52</span></span>
<span class="line">	s <span class="token operator">:=</span> t<span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token string">&quot;20060102&quot;</span><span class="token punctuation">)</span></span>
<span class="line">	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> <span class="token string">&quot;=&gt;&quot;</span><span class="token punctuation">,</span> s<span class="token punctuation">)</span></span>
<span class="line">	<span class="token comment">// Wed Dec 21 08:52:14 +0000 UTC 2011 =&gt; 20111221</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出的结果已经写在每行 <code>//</code> 的后面。</p>`,13)),s("p",null,[n[1]||(n[1]=a("如果你需要在应用程序在经过一定时间或周期执行某项任务（事件处理的特例），则可以使用 ")),n[2]||(n[2]=s("code",null,"time.After()",-1)),n[3]||(n[3]=a(" 或者 ")),n[4]||(n[4]=s("code",null,"time.Ticker",-1)),n[5]||(n[5]=a("：我们将会在 ")),p(t,{to:"/chapter-2/14.5.html"},{default:e(()=>n[0]||(n[0]=[a("第 14.5 节")])),_:1}),n[6]||(n[6]=a(" 讨论这些有趣的事情。 另外，")),n[7]||(n[7]=s("code",null,"time.Sleep(d Duration)",-1)),n[8]||(n[8]=a(" 可以实现对某个进程（实质上是 goroutine）时长为 ")),n[9]||(n[9]=s("code",null,"d",-1)),n[10]||(n[10]=a(" 的暂停。"))]),n[17]||(n[17]=s("h2",{id:"链接",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#链接"},[s("span",null,"链接")])],-1)),s("ul",null,[s("li",null,[p(t,{to:"/chapter-2/directory.html"},{default:e(()=>n[11]||(n[11]=[a("目录")])),_:1})]),s("li",null,[n[13]||(n[13]=a("上一节：")),p(t,{to:"/chapter-2/04.7.html"},{default:e(()=>n[12]||(n[12]=[a("strings 和 strconv 包")])),_:1})]),s("li",null,[n[15]||(n[15]=a("下一节：")),p(t,{to:"/chapter-2/04.9.html"},{default:e(()=>n[14]||(n[14]=[a("指针")])),_:1})])])])}const v=o(r,[["render",k],["__file","04.8.html.vue"]]),f=JSON.parse('{"path":"/chapter-2/04.8.html","title":"4.8 时间和日期","lang":"zh-cn","frontmatter":{},"headers":[{"level":1,"title":"4.8 时间和日期","slug":"_4-8-时间和日期","link":"#_4-8-时间和日期","children":[{"level":2,"title":"链接","slug":"链接","link":"#链接","children":[]}]}],"git":{},"filePathRelative":"chapter-2/04.8.md"}');export{v as comp,f as data};

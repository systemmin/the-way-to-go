import{_ as l,c as i,a as c,b as a,d as e,e as p,f as s,r as o,o as u}from"./app-DtITwm2S.js";const r={};function d(k,n){const t=o("RouteLink");return u(),i("div",null,[n[5]||(n[5]=c(`<h1 id="_10-3-使用自定义包中的结构体" tabindex="-1"><a class="header-anchor" href="#_10-3-使用自定义包中的结构体"><span>10.3 使用自定义包中的结构体</span></a></h1><p>下面的例子中，main.go 使用了一个结构体，它来自 struct_pack 下的包 <code>structPack</code>。</p><p>示例 10.5 <a href="examples/chapter_10/struct_pack/structPack.go">structPack.go</a>：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">package</span> structPack</span>
<span class="line"></span>
<span class="line"><span class="token keyword">type</span> ExpStruct <span class="token keyword">struct</span> <span class="token punctuation">{</span></span>
<span class="line">    Mi1 <span class="token builtin">int</span></span>
<span class="line">    Mf1 <span class="token builtin">float32</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>示例 10.6 <a href="examples/chapter_10/main.go">main.go</a>：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">package</span> main</span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">(</span></span>
<span class="line">    <span class="token string">&quot;fmt&quot;</span></span>
<span class="line">    <span class="token string">&quot;./struct_pack/structPack&quot;</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    struct1 <span class="token operator">:=</span> <span class="token function">new</span><span class="token punctuation">(</span>structPack<span class="token punctuation">.</span>ExpStruct<span class="token punctuation">)</span></span>
<span class="line">    struct1<span class="token punctuation">.</span>Mi1 <span class="token operator">=</span> <span class="token number">10</span></span>
<span class="line">    struct1<span class="token punctuation">.</span>Mf1 <span class="token operator">=</span> <span class="token number">16.</span></span>
<span class="line"></span>
<span class="line">    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Mi1 = %d\\n&quot;</span><span class="token punctuation">,</span> struct1<span class="token punctuation">.</span>Mi1<span class="token punctuation">)</span></span>
<span class="line">    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Mf1 = %f\\n&quot;</span><span class="token punctuation">,</span> struct1<span class="token punctuation">.</span>Mf1<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出：</p><pre><code>Mi1 = 10
Mf1 = 16.000000
</code></pre><h2 id="链接" tabindex="-1"><a class="header-anchor" href="#链接"><span>链接</span></a></h2>`,9)),a("ul",null,[a("li",null,[e(t,{to:"/chapter-2/directory.html"},{default:p(()=>n[0]||(n[0]=[s("目录")])),_:1})]),a("li",null,[n[2]||(n[2]=s("上一节：")),e(t,{to:"/chapter-2/10.2.html"},{default:p(()=>n[1]||(n[1]=[s("使用工厂方法创建结构体实例")])),_:1})]),a("li",null,[n[4]||(n[4]=s("下一节：")),e(t,{to:"/chapter-2/10.4.html"},{default:p(()=>n[3]||(n[3]=[s("带标签的结构体")])),_:1})])])])}const v=l(r,[["render",d],["__file","10.3.html.vue"]]),b=JSON.parse('{"path":"/chapter-2/10.3.html","title":"10.3 使用自定义包中的结构体","lang":"zh-cn","frontmatter":{},"headers":[{"level":1,"title":"10.3 使用自定义包中的结构体","slug":"_10-3-使用自定义包中的结构体","link":"#_10-3-使用自定义包中的结构体","children":[{"level":2,"title":"链接","slug":"链接","link":"#链接","children":[]}]}],"git":{},"filePathRelative":"chapter-2/10.3.md"}');export{v as comp,b as data};

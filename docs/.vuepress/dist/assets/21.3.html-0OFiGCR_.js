import{_ as n,c as i,a as r,b as e,d as o,e as s,f as a,r as p,o as u}from"./app-DtITwm2S.js";const d={};function m(f,t){const l=p("RouteLink");return u(),i("div",null,[t[5]||(t[5]=r('<h1 id="_21-3-atlassian-一个虚拟机群管理系统" tabindex="-1"><a class="header-anchor" href="#_21-3-atlassian-一个虚拟机群管理系统"><span>21.3 Atlassian：一个虚拟机群管理系统</span></a></h1><p>http://www.atlassian.com/</p><p>在 Atlassian，Go 被用于支持并发的实用程序设计，事实上是用于配置和监控测试服务器。他们为软件开发人员制作开发和协作工具（主要是一个 Java 商店）。他们有一个由虚拟机 (VM) 组成的测试集群，在大量无硬盘主机上运行。它的供应和监控系统是用 Go 编写的；该系统由 3 个部分组成：</p><ul><li>在每个服务器上运行的代理进程，广播其虚拟机的状态。</li><li>一个管理程序，听取代理的广播，并在一个虚拟机没有报告时采取行动。</li><li>一个命令行工具，用于向管理器发布命令。</li></ul><p>代理使用协议缓冲区来编码它所读取的状态信息，并通过 UDP 广播这些信息。管理器读取配置文件并为集群中的每个虚拟机启动一个 goroutine。每个 goroutine 监听来自其相应的虚拟机的公告，并发出指令（shell 命令），使其处于正确的状态。</p><p><u>为什么 Go 在这里起作用：</u>每个虚拟机的一个 goroutine 很好地映射到它们的配置。</p><p>这个系统也<em>很容易部署</em>，因为他们可以运送没有依赖性的二进制文件。</p><p>正如 Atlassian 工程师 Dave Cheney 所说：</p><blockquote><p>“代理程序运行在联网启动的机器上，并且完全从 RAM 中运行。与 JVM 或 Python 的运行时相比，单一的静态二进制文件是一个很大的节省。”</p></blockquote>',9)),e("ul",null,[e("li",null,[o(l,{to:"/chapter-4/directory.html"},{default:s(()=>t[0]||(t[0]=[a("目录")])),_:1})]),e("li",null,[t[2]||(t[2]=a("上一节：")),o(l,{to:"/chapter-4/21.2.html"},{default:s(()=>t[1]||(t[1]=[a("MROffice：一个使用 Go 的呼叫中心网络电话 (VOIP) 系统")])),_:1})]),e("li",null,[t[4]||(t[4]=a("下一节：")),o(l,{to:"/chapter-4/21.4.html"},{default:s(()=>t[3]||(t[3]=[a("Camilistore：一个可寻址内容存储系统")])),_:1})])])])}const c=n(d,[["render",m],["__file","21.3.html.vue"]]),_=JSON.parse('{"path":"/chapter-4/21.3.html","title":"21.3 Atlassian：一个虚拟机群管理系统","lang":"zh-cn","frontmatter":{},"headers":[{"level":1,"title":"21.3 Atlassian：一个虚拟机群管理系统","slug":"_21-3-atlassian-一个虚拟机群管理系统","link":"#_21-3-atlassian-一个虚拟机群管理系统","children":[]}],"git":{},"filePathRelative":"chapter-4/21.3.md"}');export{c as comp,_ as data};
